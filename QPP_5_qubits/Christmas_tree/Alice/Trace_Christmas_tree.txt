
Set n, possible number of quantum states = 2**num_of_qubits: 32

backend = AerSimulator(method='statevector')

parameters - Secret key file name: Secret_key_5-qubits_Christmas_tree.txt

parameters - Secret key retrieved from file:  011110001000011111000010001010001001010000000000100100100111101101000001010111101111110011010111111010000101100100000110101100110011101010100110010011001100111101110011010100101111111001100001000011001010010110010100110010101010101110111011101000010100011111111001101010101111010101100110100001010010000111100110111000001110101010011010010001011111100111110000011101110000000101111101100110101101110011110110011000111010001111101010000101111011000101010110001100010000110010111101

parameters - Set bits_in_block = num_of_bits / num_of_perm_in_pad: 160

parameters - Length of key chunks (bits_in_block/num_of_qubits): 32
QPP_param_file: QPP_param_5-qubits_V0_Christmas_tree.json
plaintext_file: Christmas_tree.png
trace: 1
job_trigger: 10000
print_trigger: 10000
draw_circuit: True
do_sampler: True
version: V0

service: None
backend: None
opt_level, optimisation level for transpile: 2
resilience_level: 1

None

n, possible number of quantum states: 32
num_of_bits, classical key length (bit): 480
bits_in_block: 160
num_of_qubits: 5
num_of_perm_in_pad, number of permutations gates in pad: 3
pad_selection_key_size: 6
file_to_bitstring - Plaintext file Christmas_tree.png is an image saved in the Portable Network Graphic (PNG) format

file_to_bitstring - Length of image in bytes: 12758

file_to_bitstring - First 100 bytes
b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x02Q\x00\x00\x02K\x08\x03\x00\x00\x00\xf0\xef3\x11\x00\x00\x02\xdfPLTE\xff\xff\xff\xef\xef\xef\x00\x00\x00\x00\x06\x00\x00\t\x00\x00\x13\x00\x00\x19\x00\x00\x1c\x00\x00&\x00\x00/\x00\x009\x00\x00B\x00\x00L\x00\x00O\x00\x00R\x00\x00V\x00\x00Y\x00\x00_\x00\x00f\x00\x00i'

file_to_bitstring - Last 100 bytes
b'\xff\xb2\xa0\xa3*\x94\x04\xec\xa9U\xad\t\xfa\xf3\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Z\x82\xff\x0fV\xbds5\xf8w\xd8\xa9\x00\x00\x00\x00IEND\xaeB`\x82'

file_to_bitstring - Length of image in bits padded with '0': 102065

file_to_bitstring - First 192 bits in message, shown grouped by 8 bits
10001001 01010000 01001110 01000111 00001101 00001010 00011010 00001010 00000000 00000000 00000000 00001101 01001001 01001000 01000100 01010010 00000000 00000000 00000010 01010001 00000000 000

file_to_bitstring - Last 192 bits in message, shown grouped by 8 bits
111 00001111 01010110 10111101 01110011 00110101 11111000 01110111 11011000 10101001 00000000 00000000 00000000 00000000 01001001 01000101 01001110 01000100 10101110 01000010 01100000 10000010

permutation_pad

permutation pad - Permutation number: 0, Depth of quantum circuit: 1

permutation_pad - permutation number: 0, dictionary:
{0: '01000', 1: '00010', 2: '01001', 3: '11100', 4: '00110', 5: '01010', 6: '10001', 7: '01011', 8: '10101', 9: '00101', 10: '11011', 11: '10010', 12: '00001', 13: '10000', 14: '00011', 15: '01101', 16: '00111', 17: '10011', 18: '10100', 19: '11010', 20: '11111', 21: '01100', 22: '11000', 23: '00100', 24: '00000', 25: '10110', 26: '11101', 27: '01110', 28: '11001', 29: '01111', 30: '10111', 31: '11110'}
permutation pad - Elapsed time: 0:00:00.886745

permutation pad - Permutation number: 1, Depth of quantum circuit: 1

permutation_pad - permutation number: 1, dictionary:
{0: '10011', 1: '01101', 2: '11001', 3: '00100', 4: '11100', 5: '10001', 6: '01000', 7: '01100', 8: '10100', 9: '10110', 10: '01011', 11: '00111', 12: '00101', 13: '01010', 14: '11101', 15: '11011', 16: '00110', 17: '11000', 18: '00011', 19: '10000', 20: '11111', 21: '00010', 22: '10111', 23: '11110', 24: '10101', 25: '01110', 26: '01001', 27: '01111', 28: '10010', 29: '11010', 30: '00001', 31: '00000'}
permutation pad - Elapsed time: 0:00:01.188881

permutation pad - Permutation number: 2, Depth of quantum circuit: 1

permutation_pad - permutation number: 2, dictionary:
{0: '00001', 1: '01010', 2: '00110', 3: '11101', 4: '01011', 5: '00111', 6: '00010', 7: '10100', 8: '01110', 9: '11100', 10: '00000', 11: '10101', 12: '11011', 13: '01111', 14: '10110', 15: '01001', 16: '01000', 17: '10010', 18: '11001', 19: '11010', 20: '10000', 21: '10011', 22: '11000', 23: '00011', 24: '00101', 25: '11110', 26: '10111', 27: '00100', 28: '01101', 29: '11111', 30: '10001', 31: '01100'}
permutation pad - Elapsed time: 0:00:01.442309
permutation pad - Length of Permutation_Pad: 3

encrypt - Length of message in bits:  102065
encrypt - Length of randomized message:  102065
encrypt - Length of message chunks: 20413
encrypt - Remainder of dividing (Length of message chunks) by (Job trigger): 413

encrypt - x : 9999,  Permutation_Pad[1], State vector: 10100, Most frequent: 11111
encrypt - Elapsed time: 0:00:00.002132
encrypt - x : 19999,  Permutation_Pad[1], State vector: 10011, Most frequent: 10000
encrypt - Elapsed time: 0:00:00.004184

encrypt - Elapsed time for encryption of message: 0:00:00.004276

encrypt - Length of ciphertext in bits stored into QPP_param.json:  102065

encrypt - First 192 bits in ciphertext string
101111010000111001011010101110100101011000010110110011001100001100100011011100010000011010100001101100110001101101100110100100011011010110111101111010111111011100011010101011001001001011101100
ciphertext_to_binary - Ciphertext file name: ciphertext_Christmas_tree.bin
